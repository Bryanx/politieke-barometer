@using System.Web.Optimization
@using BAR.BL.Domain.Users
@using BAR.UI.MVC.Helpers
@model BAR.UI.MVC.Models.EditUserViewModel

@{
    var grid = new WebGrid(Model.Users, canPage: false);
}

<h1>@Model.PageTitle</h1>

    @if (Model != null)
    {
        <div id="userGrid">

            @using (Html.BeginForm("WebGridBatch", "User", FormMethod.Post, new { @role = "search" }))
            {
                <div class="navbar navbar-default" role="search">
                    <ul class="nav navbar-nav navbar-form">
                        <li>
                            <button id="btnRefresh" href="#" title="Refresh" class="btn btn-default btn-sm">
                                <i class="glyphicon glyphicon-refresh"></i>
                            </button>
                        </li>
                        <li>
                            <button type="submit" id="btnDelete" name="btnDelete" href="#" value="1" title="Delete" class="btn btn-default btn-sm">
                                <i class="glyphicon glyphicon-remove"></i>
                            </button>
                        </li>
                        <li>
                            <button type="button" id="btnExport" name="btnExport" href="#" title="Export..." class="btn btn-default btn-sm"
                                    data-toggle="modal" data-target=".export-dialog">
                                <i class="glyphicon glyphicon-export"></i>
                            </button>
                        </li>
                    </ul>
                </div>

                @MvcHtmlString.Create(
                    grid.GetHtml(
                        htmlAttributes: new
                        {
                            id = "grid",
                            @class = "table table-bordered table-striped table-condensed"
                        },
                        emptyRowCellValue: "No Records Found",
                        headerStyle: "grid-header",
                        columns: grid.Columns(
                            grid.Column(header: "{CheckBoxHeading}",
                                format: @<text><input id="select" class="box" name="select" type="checkbox" value="@item.Value.Id" /></text>,
                                style: "text-center checkbox-width"),
                            grid.Column("Voornaam",
                                format: item => Html.EditableTextBox((item.Value as User).FirstName, item.Value as User, "FirstName")),
                            grid.Column("Achternaam",
                                format: item => Html.EditableTextBox((item.Value as User).LastName, item.Value as User, "LastName")),
                            grid.Column("E-mailadres",
                                format: item => Html.EditableTextBox((item.Value as User).Email, item.Value as User, "E-mailadres"))
                            )
                        )
                        .ToString()
                        .Replace("{CheckBoxHeading}", "<div class='text-center'><input type='checkbox' id='allBox'/></div>")
                    )
            }
        </div>

    }

    <div class="more-button text-center"><button type="button" id="moreButton" class="btn btn-default">Load More</button></div>

    @using (Html.BeginForm("Export", "User", FormMethod.Post))
    {
        <div class="modal fade export-dialog">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Export</h4>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid">
                            <div class="row">
                                @Html.Hidden("CurrentPage", grid.PageIndex)
                                @Html.Hidden("RowsPerPage", grid.RowsPerPage)
                                @Html.Hidden("PagingEnabled", grid.PageCount > 1)
                                <div class="col-md-3">Range:</div>
                                <div class="col-md-9">
                                    <div class="radio">
                                        <label>
                                            <input type="radio" name="pageOptions" id="pageCurrent" value="pageCurrent" checked>
                                            Current Page
                                        </label>
                                    </div>
                                    <div class="radio">
                                        <label>
                                            <input type="radio" name="pageOptions" id="pageAll" value="pageAll">
                                            All
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">Output:</div>
                                <div class="col-md-9">
                                    <div class="radio">
                                        <label>
                                            <input type="radio" name="exportType" id="exportExcel" value="exportExcel" checked>
                                            Excel
                                        </label>
                                    </div>
                                    <div class="radio">
                                        <label>
                                            <input type="radio" name="exportType" id="exportCsv" value="exportCsv">
                                            Csv
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Export</button>
                    </div>
                </div>
            </div>
        </div>
    }

@section CustomJS {
    @Scripts.Render("~/Scripts/jquery/jquery.signalR-2.2.0.min.js")
    <script src="/signalr/hubs"></script>

    <script>
        $(function() {

            var webGridHubClient = $.connection.webGridHub;

            webGridHubClient.client.recordSaved = function() {
                alert("Record Saved.");
            };

            $(".edit-button").on("click",
                function() {
                    var row = $(this).closest("tr");
                    $(".record-toolbar li", row).toggleClass("hide");
                    $("input, select, textarea", row).toggleClass("hide");
                    $("td", row).each(function() {
                        var cell = $(this, row);
                        var cellValue = $(".cell-value", cell);
                        if (cellValue.length > 0) {
                            $("input", cell).val(cellValue.text());
                        }
                    });
                    $(".cell-value", row).toggleClass("hide");
                });

            $(".cancel-button").on("click",
                function() {
                    var row = $(this).closest("tr");
                    $(".record-toolbar li", row).toggleClass("hide");
                    $(".cell-value", row).toggleClass("hide");
                    $("input, select, textarea", row).toggleClass("hide");
                });

            $(".save-button").on("click",
                function() {
                    var row = $(this).closest("tr");
                    var record = getRecord(row);
                    webGridHubClient.server.saveRecord(record);
                    $("td", row).each(function() {
                        var cell = $(this, row);
                        var inputValue = $("input", cell);
                        $(".cell-value", cell).text(inputValue.val());
                    });
                    $(".record-toolbar li", row).toggleClass("hide");
                    $("input, select, textarea", row).toggleClass("hide");
                    $(".cell-value", row).toggleClass("hide");
                });

            function getRecord(row) {
                return {
                    id: row.find(':nth-child(1)').find("input:checkbox").val(),
                    checkBoxCell: row.find(':nth-child(1)').html(),
                    userName: row.find(':nth-child(2)').find("input").val(),
                    firstName: row.find(':nth-child(3)').find("input").val(),
                    lastName: row.find(':nth-child(4)').find("input").val(),
                    lastLogin: row.find(':nth-child(5)').find("input").val()
                };
            };

            $.connection.hub.start();

        })
    </script>
}