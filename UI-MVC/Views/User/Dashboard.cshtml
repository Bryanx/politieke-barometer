@using System.Web.Optimization
@model BAR.UI.MVC.Models.ItemViewModels.ItemViewModel
@{
    ViewBag.Title = Model.PageTitle;
}

@section CustomCSS{
    <link rel="stylesheet" href="../../Content/build/css/gridstack.css"/>
}

<section>
    <h1>@Model.PageTitle</h1>
    <hr/>
    <div>
        <button id="btnAddLine" class="btn btn-primary">Add line chart</button>
        <button id="btnAddPie" class="btn btn-primary">Add donut chart</button>
        <button id="btnAddBar" class="btn btn-primary">Add bar chart</button>
        <button id="saveWidgets" class="btn btn-primary">Save changes</button>
    </div>
    <br>
    <!-- Widgets -->
    <div class="grid-stack" id="grid">

    </div>
</section>

<div style="visibility: hidden">space</div>

<!-- Subscriptions -->
@if (Model.Items.Any()) {
    <section class="subscriptions">
        <br/>
        <h1>Abonnementen</h1>
        <hr/>
        <section class="shadowed">
            @Html.Partial("Partials/_PersonTable", Model)
        </section>
    </section>
}

<div style="visibility: hidden">space</div>

@section CustomJS{
    @Scripts.Render("~/bundles/gridstack", "~/bundles/morrisCharts")
    <script type="text/javascript">
        //Widgets:
        //GET Request for widgets
        function loadWidgets() {
            $.ajax('/api/Widget',
                    {
                        type: 'GET',
                        dataType: 'json'
                    })
                //if GET request is succesfull: call loadGrid() in widgets.js -> loads all widgets
                .done(data => loadGrid(data))
                //TODO: if FAIL proper error handling
                .fail(() => alert('Widgets could not be loaded.'));
        }

        (() => {
            $('#saveWidgets').on('click', saveGrid);
            loadWidgets();
            
            var wto;
            $('.subscribeItem').click(function() {
                clearTimeout(wto);
                var $this = $(this);
                var id = $this.data('item-id');
                if (res.subscriptionAmount === 1) {
                    $('.subscriptions').empty();
                    res.alertcount = 0;
                    updateAlertCount();
                } else {
                    $this.parent().parent().empty();
                }
                wto = setTimeout(function() {
                        $.ajax({
                                type: 'POST',
                                url: '/api/ToggleSubscribe/' + id
                            }).fail(() => { /* ok */ })
                            .done(function() {
                                loadAlerts();
                                res.subscriptionAmount--;
                            });
                    },
                    500);
            });
        })($);
    </script>
}