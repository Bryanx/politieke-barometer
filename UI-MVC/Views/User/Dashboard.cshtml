@using System.Web.Optimization
@model BAR.UI.MVC.Models.ItemViewModels.ItemViewModel
@{
    ViewBag.Title = Model.PageTitle;
}

@section CustomCSS{
    <link rel="stylesheet" href="../../Content/build/css/gridstack.css"/>
}

<section>
    <h1>@Model.PageTitle</h1>
    <hr/>
    <div>
        <button id="btnAddLine" class="btn btn-primary">Add line chart</button>
        <button id="btnAddPie" class="btn btn-primary">Add donut chart</button>
        <button id="btnAddBar" class="btn btn-primary">Add bar chart</button>
        <button id="saveWidgets" class="btn btn-primary">Save changes</button>
    </div>
    <br>
    <!-- Widgets -->
    <div class="grid-stack" id="grid">

    </div>
</section>

<div style="visibility: hidden">space</div>

<!-- Subscriptions -->
@if (Model.People.Any()) {
    <section>
        <br/>
        <h1>Abonnementen</h1>
        <hr/>
        @Html.Partial("Partials/_Subscriptions", Model)
    </section>
}

<div style="visibility: hidden">space</div>

@section CustomJS{
    @Scripts.Render("~/bundles/gridstack", "~/bundles/morrisCharts")
    <script type="text/javascript">
        //Subscriptions:
        function personUnsubscribe(itemId) {
            $('.subscription').click(function() {
                var id = $(this).attr('data-id');
                if (id === itemId.toString()) {
                    if (res.subscriptionAmount === 1) {
                        $('#peopleSubscriptions').empty();
                        res.alertcount = 0;
                        updateAlertCount();
                    } else {
                        $(this).empty();
                    }
                }
            });
            $.ajax(`/api/User/Subscription/${itemId}/Delete`,
                    {
                        type: 'DELETE',
                        dataType: 'json'
                    })
                .done(() => {
                    loadAlerts();
                    res.subscriptionAmount--;
                })
                //TODO: if FAIL proper error handling
                .fail(() => alert('Subscriptions could not be loaded.'));
        }

        //Widgets:
        //GET Request for widgets
        function loadWidgets() {
            $.ajax('/api/Widget',
                    {
                        type: 'GET',
                        dataType: 'json'
                    })
                //if GET request is succesfull: call loadGrid() in widgets.js -> loads all widgets
                .done(data => loadGrid(data))
                //TODO: if FAIL proper error handling
                .fail(() => alert('Widgets could not be loaded.'));
        }

        (() => {
            $('#saveWidgets').on('click', saveGrid);
            loadWidgets();
        })($);
    </script>
}