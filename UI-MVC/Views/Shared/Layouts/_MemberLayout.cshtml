@using System
@using System.Activities.Statements
@using System.Web.Optimization
@using BAR.UI.MVC.Controllers
@using MvcBreadCrumbs
@model BAR.UI.MVC.Models.BaseViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@ViewData["Title"]</title>

    @Styles.Render("~/Content/css")

    @if (IsSectionDefined("CustomCSS")) {
        @RenderSection("CustomCSS")
    }

    <!-- Custom Theme Style -->
    @Styles.Render("~/Content/custom")
    
    <!-- Font -->
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
</head>

<body class="nav-sm">
<div class="container body">
<div class="main_container">
<div class="col-md-3 left_col">
    <div class="left_col scroll-view">
        <div class="navbar" style="border: 0;">
            <a href='@Url.Action("Index","Home")'>
                <i class="small-logo"></i>
            </a>
        </div>

        <div class="clearfix"></div>

        <br/>

        <!-- sidebar menu -->
        <div id="sidebar-menu" class="main_menu_side hidden-print main_menu">
            <div class="menu_section">
                <ul class="nav side-menu">
                    @Html.Partial("Partials/NavBarLinks")
                </ul>
            </div>

        </div>
        <!-- /sidebar menu -->
    </div>
</div>

<!-- top navigation -->
<div class="top_nav">
    <div class="nav_menu">
            <div class="nav toggle">
                <a id="menu_toggle">
                    <i class="fa fa-bars"></i>
                </a>
            </div>

        <!-- login -->
        @if (Model.User != null) {
            @Html.Partial("Partials/LoggedInNavbar", Model)
        } else {
            @Html.Partial("Partials/LoginModal", Model)
        }
            <!-- search -->
            @Html.Partial("Partials/SearchBar")
    </div>
</div>
<!-- /top navigation -->

<!-- page content -->
    <div class="right_col" role="main">
        @Html.Raw(BreadCrumb.Display())
        @RenderBody()
    </div>
<!-- /page content -->

<!-- footer content -->
<footer>
    <div class="pull-right">
        &copy; @DateTime.Now.Year - Barometer
    </div>
    <div class="clearfix"></div>
</footer>
<!-- /footer content -->
</div>
</div>

<!-- Scripts -->
@Scripts.Render("~/bundles/jquery","~/bundles/bootstrap","~/bundles/dates","~/bundles/timeago", "~/Scripts/vue.min.js")
<script type="text/javascript">

    //global variables
    var res = {
        alertLoader: $("<div />", { class: "loadingAlerts" }),
        alertcount: 0,
        subscriptionAmount: $('.subscription').length
    };

    //Alerts:
    //Updates the alert count icon
    function updateAlertCount() {
        if (res.alertcount <= 0) {
            $('#alertCount').hide();
        } else {
            $('#alertCount').show();
            $('#alertCount').html(res.alertcount);
        }
    }

    function removeAlert(alertId) {
        $.ajax(`/api/User/Alert/${alertId}/Delete`,
                {
                    type: 'DELETE',
                    dataType: 'json'
                })
            .done(() => loadAlerts())
            .fail(() => alert('Cannot change alert.'));
    }

    //When an alert is clicked, this function is called.
    //It sets the property isRead of the Alert to true.
    function markAsRead(id) {
        var alert = $(`#alert${id}`);
        if (!alert.hasClass('alertRead')) {
            alert.addClass('alertRead');
            res.alertcount = res.alertcount - 1;
            updateAlertCount();
        }
        $.ajax(`/api/User/Alert/${id}/Read`,
                {
                    type: 'PUT',
                    dataType: 'json'
                })
            .done(() => { /*ok*/ })
            .fail(() => alert('Cannot change alert.'));
    }

    //Generates the HTML for one alert item in the dropdown alert menu
    function generateAlertHTML(alert) {
        var read = "";
        if (alert.IsRead) {
            read = "alertRead";
        }

        var alertItem = $("<li />",
            {
                "class": `alertMessage${alert.AlertId} ${read}`,
                onclick: `markAsRead(${alert.AlertId})`
            });

        var alertCloseButton = $("<div />",
            {
                "class": "alertClose",
                title: "Verwijder alert"
            }).append($("<a />",
            {
                "class": "fa fa-close",
                onclick: `removeAlert(${alert.AlertId})`

            }));
        var alertBody = $("<a />",
            {
                href: `/Person/Details/${alert.AlertId}`
            });
        var alertIcon = $("<div />",
            {
                "class": "alertIcon"
            }).append($("<i />",
            {
                "class": "fa fa-user"
            }));
        var alertContent = $("<span />",
            {
                "class": "font_16",
                html: `<strong>${alert.Name}</strong> is nu trending!`
            });
        var alertTime = $("<span />",
            {
                "class": "alertTime",
                html: `<i class="font_11 fa fa-clock-o"></i> ${jQuery.timeago(alert.TimeStamp)}`
            });
        alertBody.append(alertIcon).append(alertContent).append(alertTime)
        alertItem.append(alertCloseButton).append(alertBody);
        return alertItem;
    }


    //Inserts the HTML for the alerts inside the alert dropdownlist in the top-navbar
    function InsertAlerts(alertData) {
        $('#alertMenu').empty();
        var counter = 0;
        $.each(alertData,
            (key, value) => {
                var alertItem = generateAlertHTML(value);

                //Add alert to alert dropdownlist
                $('#alertMenu').append(alertItem);

                if (!value.IsRead) {
                    counter++;
                }
            });

        //Update the alertCounter
        res.alertcount = counter;
        updateAlertCount();
    }

    //Ajax GET request: loads all alerts and calls InsertAlerts() method to add HTML to the page.
    function loadAlerts() {
        //show loading gif
        $(".loadingAlerts").css("display", "block");
        $.ajax({
                type: 'GET',
                url: '/api/User/GetAlerts',
                dataType: 'json',
                beforeSend: () => $("#alertMenu").append(res.alertLoader),
            })
            .done(data => {
                //hide loading gif
                $("#alertMenu").find(res.alertLoader).remove();
                //There are alerts available
                if (data != undefined) {
                    var alertData = data;
                    console.log(alertData);
                    InsertAlerts(data);
                    $('#alertMenu').append(
                        "<li id=\"seeAllAlerts\"><div class=\"text-center\"><a><strong>Bekijk alle alerts</strong></a></div></li>");
                } else { //No available alerts
                    $('#alertMenu').empty();
                    $('#alertMenu').append("<li class=\"noAlertsAvailable\"><i class=\"fa fa-bell\"></i></br>" +
                        "<strong>Je hebt geen alerts.</strong></br>" +
                        "Abonneer jezelf op personen, partijen of thema's</br>" +
                        "om te zien wanneer ze trending zijn.</li>");
                }
            }).fail(() => {
            //TODO: if request fails proper error handling
        });
    }

    function submitForm($this, event, message=null) {
        $.ajax({
            type: $this.attr('method'),
            url: $this.attr('action'),
            data: $this.serialize(),
            succes: message
                .addClass('green')
                .html("Saved.")
                .fadeOut(1000,
                    function() {
                        $(this)
                            .removeClass()
                            .html("")
                            .css("display", "inline");
                    })
        }).fail(() => message
            .addClass('red')
            .html("Mislukt.")
            .fadeOut(1000,
                function() {
                    $(this)
                        .removeClass()
                        .html("")
                        .css("display", "inline");
                }));
        event.preventDefault();
    }


    (() => {
        loadAlerts();
        //Everytime the alert button is clicked, they are reloaded.
        $('#alertDropdown').click(loadAlerts);
    })(jQuery);
</script>

@if (IsSectionDefined("CustomJS")) {
    @RenderSection("CustomJS")
}

<!-- Custom Theme Scripts -->
@Scripts.Render("~/bundles/custom")

</body>
</html>