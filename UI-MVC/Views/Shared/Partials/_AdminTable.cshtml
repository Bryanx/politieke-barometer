@using BAR.UI.MVC.Helpers
@model BAR.UI.MVC.Models.EditUserViewModel

<table id="datatable-buttons" class="table" cellspacing="10px" width="100%">

    <colgroup>
        <col style="width: 40px;">
        <col style="width: 11%">
        <col style="width: 11%">
        <col style="width: 12%">
        <col style="width: 12%">
        <col style="width: 16%">
        <col style="width: 8%">
        <col style="width: 8%">
        <col style="width: 12%">
    </colgroup>
    <thead>
        <tr>
            <th>
                @Resources.Photo
            </th>
            <th>
                @Resources.Firstname
            </th>
            <th>
                @Resources.Lastname
            </th>
            <th>
                @Resources.Gender
            </th>
            <th>
                @Resources.DateOfBirth
            </th>
            <th>
                @Resources.Email
            </th>
            <th>
            </th>
            <th>
                @Resources.Role
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Users.Count(); i++)
        {
                <tr class="subscription @(@Model.Users.ElementAt(i).Deleted ? "greyed-out" : "")">
                    <td>
                        @Html.ImageHelper(@Url.ProfilePictureUrlForUser(Model.Users.ElementAt(i).Id), htmlAttributes: new {@class = "img-circle person-image-top", onerror = "this.onload = null; this.src='/Content/build/images/user.png';"})
                    </td>
                    <td>
                        @Model.Users.ElementAt(i).FirstName
                    </td>
                    <td>
                        @Model.Users.ElementAt(i).LastName
                    </td>
                    @if (Model.Users.ElementAt(i).Gender == BAR.BL.Domain.Users.Gender.Man) {
                        <td>
                            @Resources.Man
                        </td>
                    } else if (Model.Users.ElementAt(i).Gender == BAR.BL.Domain.Users.Gender.Woman) {
                        <td>
                            @Resources.Woman
                        </td>
                    } else {
                        <td>
                            @Resources.Unknown
                        </td>
                    }
                    @if (Model.Users.ElementAt(i).DateOfBirth != null) {
                        <td>
                            @Model.Users.ElementAt(i).DateOfBirth.Value.ToShortDateString()
                        </td>
                    } else {
                        <td>
                            @Resources.NA
                        </td>
                    }
                    <td>
                        @Model.Users.ElementAt(i).Email
                    </td>
                    <td>
                        @if (Model.Users.ElementAt(i).Deleted) {
                            <a class="accountActivityChange btn btn-success btn-xs" data-item-id="@Model.Users.ElementAt(i).Id" title=@Resources.RecoverDeletedUser>@Resources.Recover</a>
                        } else {
                            <a class="accountActivityChange btn btn-danger btn-xs" data-item-id="@Model.Users.ElementAt(i).Id" title=@Resources.DeleteUser>@Resources.Delete</a>
                        }
                    </td>
                    <td id=@String.Format("td2{0}", i)>
                        @ViewBag.CurrentRoles[i]
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.User.Roles, Model.AdminRoles, Resources.ChangeRole, new {@class = "form-control input-sm", @onchange = $"changeRole('{Model.Users.ElementAt(i).Id}', '{i}')", id = $"dd{i}"})
                    </td>
                </tr>
        }
    </tbody>
</table>